{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikolai/Desktop/git/frontend/recipe/src/app/recipes/%5BidMeal%5D/page.tsx"],"sourcesContent":["// src/app/recipes/[idMeal]/page.tsx\nimport Link from 'next/link';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport Divider from '@mui/material/Divider';\n\ninterface Meal {\n  idMeal: string;\n  strMeal: string;\n  strArea: string;\n  strCategory: string;\n  strMealThumb: string;\n  strInstructions: string;\n  [key: string]: any;\n}\n\nasync function fetchMealById(idMeal: string): Promise<Meal> {\n  const res = await fetch(`http://localhost:3000/recipes/${idMeal}`);\n  const data = await res.json();\n  return data.meals[0];\n}\n\nasync function fetchMealsByCategory(category: string): Promise<Meal[]> {\n  const res = await fetch(\n    `http://localhost:3000/recipes?category=${encodeURIComponent(category)}`\n  );\n  const data = await res.json();\n  return data.meals || [];\n}\n\nexport default async function Page({\n  params,\n}: {\n  params: { idMeal: string };\n}) {\n  const meal = await fetchMealById(params.idMeal);\n  const sidebarList = await fetchMealsByCategory(meal.strCategory);\n\n  const ingredients: string[] = [];\n  for (let i = 1; i <= 20; i++) {\n    const name = meal[`strIngredient${i}`];\n    if (name) {\n      ingredients.push(name);\n    }\n  }\n\n  return (\n    <Box display=\"flex\" p={2}>\n      <Box flex={1} pr={2}>\n        <Box position=\"relative\" mb={2}>\n          <Box\n            component=\"img\"\n            src={meal.strMealThumb}\n            alt={meal.strMeal}\n            width={200}\n            height={200}\n            sx={{ position: 'absolute', top: 0, left: 0 }}\n          />\n          <Typography variant=\"h4\" align=\"center\" sx={{ width: '100%', pt: 2 }}>\n            {meal.strMeal}\n          </Typography>\n          <Box textAlign=\"center\" mt={1}>\n            <Link href={`/recipes?country=${encodeURIComponent(meal.strArea)}`}>\n              <Typography component=\"a\" variant=\"subtitle1\" color=\"primary\">\n                {meal.strArea}\n              </Typography>\n            </Link>\n          </Box>\n        </Box>\n        <Box mt={4}>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            Instructions\n          </Typography>\n          <Typography>{meal.strInstructions}</Typography>\n        </Box>\n        <Box mt={4}>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            Ingredients\n          </Typography>\n          <List>\n            {ingredients.map((ing, idx) => (\n              <ListItemButton\n                key={idx}\n                component={Link}\n                href={`/recipes?ingredient=${encodeURIComponent(ing)}`}\n              >\n                <Typography>{ing}</Typography>\n              </ListItemButton>\n            ))}\n          </List>\n        </Box>\n      </Box>\n      <Divider orientation=\"vertical\" flexItem />\n      <Box width={300} pl={2}>\n        <Typography variant=\"h6\" gutterBottom>\n          More in {meal.strCategory}\n        </Typography>\n        <List>\n          {sidebarList.map((item) => (\n            <ListItemButton\n              key={item.idMeal}\n              component={Link}\n              href={`/recipes/${item.idMeal}`}\n            >\n              <Typography>{item.strMeal}</Typography>\n            </ListItemButton>\n          ))}\n        </List>\n      </Box>\n    </Box>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}