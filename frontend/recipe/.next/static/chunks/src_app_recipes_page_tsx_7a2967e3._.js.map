{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nikolai/Desktop/git/frontend/recipe/src/app/recipes/page.tsx"],"sourcesContent":["// app/recipes/page.tsx\n'use client'; \n\nimport React from 'react';\nimport RecipeCard, { RecipeCardProps } from '../components/RecipeCard';\n\ninterface RawMealSummary {\n  idMeal: string;\n  strMeal: string;\n  strMealAlternate: string | null;\n  strCategory: string;\n  strArea: string;\n  strMealThumb: string;\n  strTags: string | null;\n  strYoutube: string | null;\n  strSource: string | null;\n}\n\nexport default async function RecipesPage() {\n  // 1) Fetch your list of recipes from the backend:\n  const res = await fetch('https://www.themealdb.com/api/json/v1/1/filter.php?c=Seafood', {\n    // Remove `cache: 'no-store'` if you want ISR or caching\n    cache: 'no-store',\n  });\n  if (!res.ok) {\n    // Handle error\n    return <p>Failed to load recipes.</p>;\n  }\n\n  // Suppose the API returns { meals: RawMealSummary[] }\n  const data: { meals: RawMealSummary[] } = await res.json();\n  const meals = data.meals || [];\n\n  return (\n    <main style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(275px, 1fr))', gap: '1rem', padding: '1rem' }}>\n      {meals.map((m) => (\n        <RecipeCard\n          key={m.idMeal}\n          idMeal={m.idMeal}\n          strMeal={m.strMeal}\n          strMealAlternate={m.strMealAlternate}\n          strCategory={m.strCategory}\n          strArea={m.strArea}\n          strMealThumb={m.strMealThumb}\n          strTags={m.strTags}\n          strYoutube={m.strYoutube}\n          strSource={m.strSource}\n        />\n      ))}\n    </main>\n  );\n}\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;;AAIvB;AAHA;;;AAiBe,eAAe;IAC5B,kDAAkD;IAClD,MAAM,MAAM,MAAM,MAAM,gEAAgE;QACtF,wDAAwD;QACxD,OAAO;IACT;IACA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,eAAe;QACf,qBAAO,6LAAC;sBAAE;;;;;;IACZ;IAEA,sDAAsD;IACtD,MAAM,OAAoC,MAAM,IAAI,IAAI;IACxD,MAAM,QAAQ,KAAK,KAAK,IAAI,EAAE;IAE9B,qBACE,6LAAC;QAAK,OAAO;YAAE,SAAS;YAAQ,qBAAqB;YAAyC,KAAK;YAAQ,SAAS;QAAO;kBACxH,MAAM,GAAG,CAAC,CAAC,kBACV,6LAAC,mJAAA,CAAA,UAAU;gBAET,QAAQ,EAAE,MAAM;gBAChB,SAAS,EAAE,OAAO;gBAClB,kBAAkB,EAAE,gBAAgB;gBACpC,aAAa,EAAE,WAAW;gBAC1B,SAAS,EAAE,OAAO;gBAClB,cAAc,EAAE,YAAY;gBAC5B,SAAS,EAAE,OAAO;gBAClB,YAAY,EAAE,UAAU;gBACxB,WAAW,EAAE,SAAS;eATjB,EAAE,MAAM;;;;;;;;;;AAcvB;KAjC8B","debugId":null}}]
}